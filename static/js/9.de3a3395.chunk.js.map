{"version":3,"sources":["views/CastView/actorDefault.png","views/CastView/CastView.js","views/CastView/CastView.module.css"],"names":["Cast","useState","actors","setActors","error","setError","moviesId","useParams","useEffect","moviesApi","fetchMovieActors","then","response","cast","length","className","s","castList","map","actor","profile_path","src","alt","name","actorImg","defaultImg","actorDefault","character","cast_id","module","exports"],"mappings":"2NAAe,MAA0B,yC,wBCM1B,SAASA,IACpB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEQC,EAAaC,cAAbD,SAYR,OAVAE,qBAAU,WACNC,IAAUC,iBAAiBJ,GAAUK,MAAK,SAAAC,GACT,IAAzBA,EAASC,KAAKC,OAIlBX,EAAUS,EAASC,MAHfR,EAAS,+CAKlB,CAACC,IAGA,qCACI,4BAAIF,IACJ,oBAAIW,UAAWC,IAAEC,SAAjB,SACKf,GACGA,EAAOgB,KAAI,SAAAC,GAAK,OACZ,qBAAIJ,UAAWC,IAAEG,MAAjB,UACKA,EAAMC,aACH,qBACIC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,KACXR,UAAWC,IAAEQ,WAGjB,qBACIT,UAAWC,IAAES,WACbJ,IAAKK,EACLJ,IAAI,cAIZ,4BAAIH,EAAMI,OACV,4CAAeJ,EAAMQ,eAhBIR,EAAMS,mB,mBC3B3DC,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,WAAa,6BAA6B,SAAW,2BAA2B,MAAQ","file":"static/js/9.de3a3395.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/actorDefault.818113aa.png\";","import { useParams } from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\nimport moviesApi from '../../services/Api';\r\nimport actorDefault from './actorDefault.png'\r\nimport s from './CastView.module.css';\r\n\r\nexport default function Cast() {\r\n    const [actors, setActors] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { moviesId } = useParams();\r\n\r\n    useEffect(() => {\r\n        moviesApi.fetchMovieActors(moviesId).then(response => {\r\n            if (response.cast.length === 0) {\r\n                setError('We don`t have any cast for this movie.');\r\n                return;\r\n            }\r\n            setActors(response.cast);\r\n        });\r\n    }, [moviesId]);\r\n\r\n    return (\r\n        <>\r\n            <p>{error}</p>\r\n            <ul className={s.castList}>\r\n                {actors &&\r\n                    actors.map(actor => (\r\n                        <li className={s.actor} key={actor.cast_id}>\r\n                            {actor.profile_path ? (\r\n                                <img\r\n                                    src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n                                    alt={actor.name}\r\n                                    className={s.actorImg}\r\n                                />\r\n                            ) : (\r\n                                <img\r\n                                    className={s.defaultImg}\r\n                                    src={actorDefault}\r\n                                    alt=\"Not found\"\r\n\r\n                                />\r\n                            )}\r\n                            <p>{actor.name}</p>\r\n                            <p>Character: {actor.character}</p>\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"CastView_castList__1wM3O\",\"thumb\":\"CastView_thumb__3tRbI\",\"defaultImg\":\"CastView_defaultImg__2vjLb\",\"actorImg\":\"CastView_actorImg__24XxV\",\"actor\":\"CastView_actor__1bj2T\"};"],"sourceRoot":""}