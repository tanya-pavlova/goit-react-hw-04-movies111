{"version":3,"sources":["views/MovieDetailView/MovieDetailView.js","services/Api.js","views/MovieDetailView/MovieDetailView.module.css"],"names":["Cast","lazy","Review","MovieDetailsView","history","useHistory","location","useLocation","url","useRouteMatch","useState","movie","setMovie","movieId","useParams","useEffect","moviesApi","fetcMovieInfo","then","className","s","Container","arrowBack","onClick","push","state","from","detailsContainer","posterContainer","poster","src","poster_path","alt","title","movieInfo","movieTitle","listDescription","textBold","text","release_date","vote_average","overview","genres","length","genresContainer","textBoldGenres","genresList","map","item","genresItem","name","id","adInfo","to","pathname","fallback","path","axios","defaults","baseURL","KEY","fetchTrendMovies","a","get","res","data","results","fetchSearchMovies","movieQuery","r","fetchMovieActors","fetchMovieReviews","module","exports"],"mappings":"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","file":"static/js/6.fd691e91.chunk.js","sourcesContent":["import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport {\r\n    useParams,\r\n    Link,\r\n    useRouteMatch,\r\n    Route,\r\n    useHistory,\r\n    useLocation,\r\n} from 'react-router-dom';\r\nimport moviesApi from '../../services/Api';\r\nimport Spinner from '../../Components/Loader/Loader'\r\nimport s from './MovieDetailView.module.css'\r\n\r\nconst Cast = lazy(() => import('../CastView/CastView.js'));\r\nconst Review = lazy(() => import('../Review/Review.js'));\r\n\r\nexport default function MovieDetailsView() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const { url } = useRouteMatch();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    const { movieId } = useParams();\r\n\r\n    useEffect(() => {\r\n        moviesApi.fetcMovieInfo(movieId).then(setMovie);\r\n    }, [movieId]);\r\n\r\n    const onClickBack = () => {\r\n        history.push(location?.state?.from ?? '/');\r\n    };\r\n\r\n    return (\r\n        <div className={s.Container}>\r\n            <div>\r\n                <button className={s.arrowBack} onClick={onClickBack} aria-label=\"Go back\">\r\n                    <span>&#8592; Back</span>\r\n                </button>\r\n\r\n                <div>\r\n                    {movie && (\r\n                        <div className={s.detailsContainer}>\r\n                            <div className={s.posterContainer}>\r\n\r\n                                <img\r\n                                    className={s.poster}\r\n                                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                    alt={movie.title}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.movieInfo}>\r\n                                <h2 className={s.movieTitle}>{movie.title}</h2>\r\n                                <li className={s.listDescription}>\r\n                                    <p className={s.textBold}>Release date: <span className={s.text}>{movie.release_date}</span></p>\r\n                                </li>\r\n                                <p className={s.textBold}>Rating: <span className={s.text}>{movie.vote_average}</span></p>\r\n                                <p className={s.textBold}>Overview: <span className={s.text}>{movie.overview}</span></p>\r\n                                {movie.genres.length > 0 && (\r\n                                    <div className={s.genresContainer}>\r\n                                        <p className={s.textBoldGenres}>Genres:</p>\r\n                                        <ul className={s.genresList}>\r\n                                            {movie.genres.map(item => (\r\n                                                <li className={s.genresItem} key={item.id}>{item.name}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <div className={s.adInfo}>\r\n                        <p className={s.textBold}>Aditional information</p>\r\n                        <p>\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `${url}/cast`,\r\n                                    state: {\r\n                                        from: location.state ? location.state.from : '/',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                Cast\r\n                            </Link>\r\n                        </p>\r\n                        <p className=\"reviews-link\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `${url}/reviews`,\r\n                                    state: {\r\n                                        from: location.state ? location.state.from : '/',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                Reviews\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                    <Suspense fallback={<Spinner />}>\r\n                        <Route path=\"/movies/:moviesId/cast\">\r\n                            <Cast />\r\n                        </Route>\r\n\r\n                        <Route path=\"/movies/:moviesId/reviews\">\r\n                            <Review />\r\n                        </Route>\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst KEY = 'ccedf80b94e5f7dfe88940fbe0231014';\r\n\r\nconst fetchTrendMovies = async () => {\r\n    return await axios\r\n        .get(`trending/all/day?api_key=${KEY}`)\r\n        .then(res => res.data.results);\r\n}\r\n\r\nconst fetchSearchMovies = movieQuery => {\r\n    return axios\r\n        .get(`search/movie?api_key=${KEY}&language=en-US&query=${movieQuery}&page=1&include_adult=false`)\r\n        .then(r => r.data.results);\r\n}\r\n\r\n\r\nconst fetcMovieInfo = movieId => {\r\n    return axios\r\n        .get(\r\n            `movie/${movieId}?api_key=${KEY}&language=en-US`,\r\n        )\r\n        .then(r => r.data);\r\n}\r\n\r\nconst fetchMovieActors = movieId => {\r\n    return axios\r\n        .get(\r\n            `movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\r\n        )\r\n        .then(r => r.data);\r\n}\r\n\r\n\r\n\r\nconst fetchMovieReviews = movieId => {\r\n    return axios\r\n        .get(\r\n            `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\r\n        )\r\n        .then(r => r.data);\r\n}\r\n\r\n\r\n\r\nexport default { fetchTrendMovies, fetchSearchMovies, fetcMovieInfo, fetchMovieActors, fetchMovieReviews };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"MovieDetailView_detailsContainer__2CcrC\",\"Container\":\"MovieDetailView_Container__1b2_T\",\"adInfo\":\"MovieDetailView_adInfo__20cD5\",\"movieInfoItem\":\"MovieDetailView_movieInfoItem__3lOVW\",\"posterContainer\":\"MovieDetailView_posterContainer__G276A\",\"poster\":\"MovieDetailView_poster__XajiY\",\"arrowBack\":\"MovieDetailView_arrowBack__1TiD8\",\"genresList\":\"MovieDetailView_genresList__1Mq41\",\"genresItem\":\"MovieDetailView_genresItem__8xu4L\",\"genresContainer\":\"MovieDetailView_genresContainer__3JXME\",\"textBold\":\"MovieDetailView_textBold__2uCb_\",\"textBoldGenres\":\"MovieDetailView_textBoldGenres__E-PHN\",\"text\":\"MovieDetailView_text__1_5HN\"};"],"sourceRoot":""}