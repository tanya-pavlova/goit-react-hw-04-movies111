{"version":3,"sources":["services/Api.js","Components/SearchBar/SearchBar.module.css","views/MoviesView/MoviesView.module.css","Components/SearchBar/SearchBar.js","views/MoviesView/MoviesView.js"],"names":["axios","defaults","baseURL","KEY","fetchTrendMovies","a","get","then","res","data","results","fetchSearchMovies","movieQuery","r","fetcMovieInfo","movieId","fetchMovieActors","fetchMovieReviews","module","exports","Searchbar","onSubmit","useState","movieName","setMovieName","className","s","header","e","preventDefault","searchInput","type","autoComplete","autoFocus","placeholder","value","onChange","event","target","toLowerCase","searchBtn","MoviesView","history","useHistory","location","useLocation","searchResult","setSearchResult","useEffect","search","URLSearchParams","moviesApi","reset","searchQuery","trim","push","toast","error","map","result","moviList","to","pathname","id","state","from","title","name"],"mappings":"uLAEAA,IAAMC,SAASC,QAAU,gCACzB,IAAMC,EAAM,mCAENC,EAAgB,uCAAG,sBAAAC,EAAA,sEACRL,IACRM,IADQ,mCACwBH,IAChCI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,WAHL,mFAAH,qDAyCP,KAAEN,mBAAkBO,kBAnCT,SAAAC,GACtB,OAAOZ,IACFM,IADE,+BAC0BH,EAD1B,iCACsDS,EADtD,gCAEFL,MAAK,SAAAM,GAAC,OAAIA,EAAEJ,KAAKC,YAgC4BI,cA5BhC,SAAAC,GAClB,OAAOf,IACFM,IADE,gBAEUS,EAFV,oBAE6BZ,EAF7B,oBAIFI,MAAK,SAAAM,GAAC,OAAIA,EAAEJ,SAuBgDO,iBApB5C,SAAAD,GACrB,OAAOf,IACFM,IADE,gBAEUS,EAFV,4BAEqCZ,EAFrC,oBAIFI,MAAK,SAAAM,GAAC,OAAIA,EAAEJ,SAekEQ,kBAV7D,SAAAF,GACtB,OAAOf,IACFM,IADE,gBAEUS,EAFV,4BAEqCZ,EAFrC,2BAIFI,MAAK,SAAAM,GAAC,OAAIA,EAAEJ,W,mBCxCrBS,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,0BAA0B,YAAc,+BAA+B,UAAY,+B,mBCAvJD,EAAOC,QAAU,CAAC,SAAW,+B,wJCGd,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAChC,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAYA,OACI,8BACI,wBAAQC,UAAWC,IAAEC,OAArB,SACI,uBAAMF,UAAWC,IAAEN,UAAWC,SATrB,SAAAO,GACjBA,EAAEC,iBAEFR,EAASE,GACTC,EAAa,KAKL,UACI,uBACIC,UAAWC,IAAEI,YACbC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOZ,EACPa,SArBK,SAAAC,GACrBb,EAAaa,EAAMC,OAAOH,MAAMI,kBAsBpB,wBAAQd,UAAWC,IAAEc,UAAWT,KAAK,SAArC,SACI,mD,qCCtBT,SAASU,IACpB,IAAMC,EAAUC,cACVC,EAAWC,cAEjB,EAAkCvB,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,MAAjD,mBAAOwB,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACN,GAAwB,KAApBJ,EAASK,OAAb,CAGA,IAAMrC,EAAa,IAAIsC,gBAAgBN,EAASK,QAAQ3C,IAAI,SAC5DkB,EAAaZ,MACd,CAACgC,EAASK,SAEbD,qBAAU,WACY,KAAdzB,GAIJ4B,IACKxC,kBAAkBY,GAClBhB,MAAK,SAAAuC,GAAY,OAAIC,EAAgBD,QAC3C,CAACvB,IAEJ,IAWM6B,EAAQ,WACVL,EAAgB,OAGpB,OACI,gCACI,cAAC,EAAD,CAAW1B,SAjBQ,SAAAgC,GACvB7B,EAAa6B,GACc,KAAvBA,EAAYC,QAIhBF,IAEAV,EAAQa,KAAR,2BAAkBX,GAAlB,IAA4BK,OAAO,SAAD,OAAWI,OALzCG,IAAMC,MAAM,+BAgBZ,6BACKX,GACGA,EAAaY,KAAI,SAAAC,GAAM,OACnB,6BACI,eAAC,IAAD,CAAMlC,UAAWC,IAAEkC,SACfC,GAAI,CACAC,SAAS,WAAD,OAAaH,EAAOI,IAC5BC,MAAO,CAAEC,KAAMrB,IAHvB,UAMKe,EAAOO,MACPP,EAAOQ,SARPR,EAAOI","file":"static/js/4.c72d2d02.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\nconst KEY = 'ccedf80b94e5f7dfe88940fbe0231014';\r\n\r\nconst fetchTrendMovies = async () => {\r\n    return await axios\r\n        .get(`trending/all/day?api_key=${KEY}`)\r\n        .then(res => res.data.results);\r\n}\r\n\r\nconst fetchSearchMovies = movieQuery => {\r\n    return axios\r\n        .get(`search/movie?api_key=${KEY}&language=en-US&query=${movieQuery}&page=1&include_adult=false`)\r\n        .then(r => r.data.results);\r\n}\r\n\r\n\r\nconst fetcMovieInfo = movieId => {\r\n    return axios\r\n        .get(\r\n            `movie/${movieId}?api_key=${KEY}&language=en-US`,\r\n        )\r\n        .then(r => r.data);\r\n}\r\n\r\nconst fetchMovieActors = movieId => {\r\n    return axios\r\n        .get(\r\n            `movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\r\n        )\r\n        .then(r => r.data);\r\n}\r\n\r\n\r\n\r\nconst fetchMovieReviews = movieId => {\r\n    return axios\r\n        .get(\r\n            `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\r\n        )\r\n        .then(r => r.data);\r\n}\r\n\r\n\r\n\r\nexport default { fetchTrendMovies, fetchSearchMovies, fetcMovieInfo, fetchMovieActors, fetchMovieReviews };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__hXY3J\",\"header\":\"SearchBar_header__aj65p\",\"searchInput\":\"SearchBar_searchInput__3qcjS\",\"searchBtn\":\"SearchBar_searchBtn__3T-Xa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviList\":\"MoviesView_moviList__1tfKC\"};","import { useState } from 'react';\r\n\r\nimport s from './SearchBar.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n    const [movieName, setMovieName] = useState('');\r\n\r\n    const handleChangeName = event => {\r\n        setMovieName(event.target.value.toLowerCase());\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        onSubmit(movieName);\r\n        setMovieName('');\r\n    };\r\n    return (\r\n        <div>\r\n            <header className={s.header}>\r\n                <form className={s.Searchbar} onSubmit={handleSubmit}>\r\n                    <input\r\n                        className={s.searchInput}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search movies\"\r\n                        value={movieName}\r\n                        onChange={handleChangeName}\r\n                    />\r\n                    <button className={s.searchBtn} type=\"submit\">\r\n                        <span>Search</span>\r\n                    </button>\r\n                </form>\r\n            </header>\r\n        </div>\r\n    );\r\n}","import { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport moviesApi from '../../services/Api';\r\nimport SearchBar from '../../Components/SearchBar/SearchBar';\r\nimport s from './MoviesView.module.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function MoviesView() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [movieName, setMovieName] = useState('');\r\n    const [searchResult, setSearchResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (location.search === '') {\r\n            return;\r\n        }\r\n        const movieQuery = new URLSearchParams(location.search).get('movie');\r\n        setMovieName(movieQuery);\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        if (movieName === '') {\r\n            return;\r\n        }\r\n\r\n        moviesApi\r\n            .fetchSearchMovies(movieName)\r\n            .then(searchResult => setSearchResult(searchResult));\r\n    }, [movieName]);\r\n\r\n    const handleSearchSubmit = searchQuery => {\r\n        setMovieName(searchQuery);\r\n        if (searchQuery.trim() === '') {\r\n            toast.error('Input correct movie name');\r\n            return;\r\n        }\r\n        reset();\r\n\r\n        history.push({ ...location, search: `movie=${searchQuery}` });\r\n    };\r\n\r\n    const reset = () => {\r\n        setSearchResult(null);\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <SearchBar onSubmit={handleSearchSubmit} />\r\n\r\n            <ul>\r\n                {searchResult &&\r\n                    searchResult.map(result => (\r\n                        <li key={result.id}>\r\n                            <Link className={s.moviList}\r\n                                to={{\r\n                                    pathname: `/movies/${result.id}`,\r\n                                    state: { from: location },\r\n                                }}\r\n                            >\r\n                                {result.title}\r\n                                {result.name}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}